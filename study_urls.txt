https://www.javatpoint.com/mockito  for any method use this -> https://www.baeldung.com/mockito-void-methods    
Spring security - > https://www.tutorialspoint.com/spring_boot/spring_boot_oauth2_with_jwt.htm
https://www.pixeltrice.com/how-do-oauth-2-0-works-understand-in-very-simple-words/    Oauthc2.0 how to work and openIdConnect
https://www.youtube.com/watch?v=af_2f1rrZdw&feature=emb_rel_end    Vedio oauth 2.0 + jwt + spring boot  
https://keyholesoftware.com/2020/06/30/quick-start-spring-security-5-oauth2-login/   spring 5.2.x  + Oauth 2.0 

https://www.geeksforgeeks.org/backtracking-to-find-all-subsets/
https://www.hackerrank.com/challenges/fraudulent-activity-notifications/problem?h_l=interview&playlist_slugs%5B%5D%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D%5B%5D=sorting
https://www.hackerrank.com/interview/interview-preparation-kit/sorting/challenges
https://www.hackerrank.com/challenges/minimum-swaps-2/problem
https://www.mplay.run/mongodb-online-terminal  Mongodb practice terminal
https://www.w3resource.com/mongodb-exercises/
https://dzone.com/articles/microservices-design-principles    microservices
https://www.hackerrank.com/Interview/interview-preparation-kit?h_r=internal-search        
Merge two sorted linked lists  
Clone a linked list with next and random pointer | Set 1
Flatten a multilevel linked list
Flatten a binary tree into linked list | Set-3
Flatten a multi-level linked list | Set 2 (Depth wise)
Merge a linked list into another linked list at alternate positions
Convert singly linked list into circular linked list
Merge first half and reversed second half of the linked list alternatively
In-place Merge two linked lists without changing links of first list
Merge K sorted Doubly Linked List in Sorted Order
Merge two sorted linked lists such that merged list is in reverse order
Reverse alternate K nodes in a Singly Linked List
Rearrange a linked list in to alternate first and last element
Alternate sorting of Linked list
Minimum number of swaps required to sort an array

https://www.hackerrank.com/challenges/crush/problem
2 5 1 3 4

2 4 1 3 5

1 4 2 3 5

1 2 4 3 5






--  query  ---
select * from BV_TEST_INVOICE ;
select first_name , address from BV_TEST_INVOICE order by first_name asc , address asc ;
update BV_TEST_INVOICE set FIRST_NAME = 'Vipul' where employee_id = '7'
--Write an SQL query to fetch the names of workers who earn the highest salary.
select FIRST_NAME , salary from BV_TEST_INVOICE where salary in (select max(salary) from BV_TEST_INVOICE)
-- Write an SQL query to fetch departments along with the total salaries paid for each of them.
select department , sum(salary) from BV_TEST_INVOICE group by department
-- Write an SQL query to fetch nth max salaries from a table.
select * from BV_TEST_INVOICE order by salary desc
select salary from (select distinct rownum as rank  from BV_TEST_INVOICE where rank<=2 ORDER BY  salary asc ) where rownum <=1 order by salary asc;

select min(salary) from (select salary from 
(select distinct salary from BV_TEST_INVOICE order by salary desc) where rownum <=2 )
----feth three Max salaries --
select salary from 
(select distinct salary from BV_TEST_INVOICE order by salary desc) where rownum <=3 ;
----feth three Min salaries --
select salary from 
(select distinct salary from BV_TEST_INVOICE order by salary asc) where rownum <=3 ;
--Write an SQL query to print the name of employees having the highest salary in each department.
select * from BV_TEST_INVOICE 
select  department , min(salary) ,count(*) from BV_TEST_INVOICE group by department having count(*) >=2  
select * FROM BV_TEST_INVOICE
WHERE rowid  in
(SELECT MIN(rowid)
FROM BV_TEST_INVOICE
GROUP BY department);

select * from BV_TEST_INVOICE
    where rowid  in
    (select max(rowid) from BV_TEST_INVOICE group by department);
    
SELECT distinct Salary from BV_TEST_INVOICE a 
WHERE 3 >= (SELECT count(distinct Salary) 
from BV_TEST_INVOICE b WHERE a.Salary >= b.Salary) order by a.Salary desc;

SELECT distinct Salary from BV_TEST_INVOICE a WHERE 3 >= (SELECT count(distinct Salary) 
from BV_TEST_INVOICE b WHERE a.Salary <= b.Salary) order by a.Salary desc;

--Write an SQL query to fetch the list of employees with the same salary.
select * from BV_TEST_INVOICE ;
Select distinct W.EMPLOYEE_ID, W.FIRST_NAME, W.Salary 
from BV_TEST_INVOICE W , BV_TEST_INVOICE W1 
where W.Salary = W1.Salary 
and W.EMPLOYEE_ID != W1.EMPLOYEE_ID;

---Write an SQL query to determine the 5th highest salary without using TOP or limit method.
SELECT Salary
FROM BV_TEST_INVOICE W1
WHERE 2 = (
 SELECT COUNT( DISTINCT ( W2.Salary ) )
 FROM BV_TEST_INVOICE W2
 WHERE W2.Salary >= W1.Salary
 );
 SELECT SYSDATE FROM DUAL;
 

