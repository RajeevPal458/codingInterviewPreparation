https://www.javatpoint.com/mockito  for any method use this -> https://www.baeldung.com/mockito-void-methods
Spring security - > https://www.tutorialspoint.com/spring_boot/spring_boot_oauth2_with_jwt.htm
https://www.pixeltrice.com/how-do-oauth-2-0-works-understand-in-very-simple-words/    Oauthc2.0 how to work and openIdConnect
https://www.youtube.com/watch?v=af_2f1rrZdw&feature=emb_rel_end    Vedio oauth 2.0 + jwt + spring boot
https://keyholesoftware.com/2020/06/30/quick-start-spring-security-5-oauth2-login/   spring 5.2.x  + Oauth 2.0

https://www.geeksforgeeks.org/backtracking-to-find-all-subsets/
https://www.hackerrank.com/challenges/fraudulent-activity-notifications/problem?h_l=interview&playlist_slugs%5B%5D%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D%5B%5D=sorting
https://www.hackerrank.com/interview/interview-preparation-kit/sorting/challenges
https://www.hackerrank.com/challenges/minimum-swaps-2/problem
https://www.mplay.run/mongodb-online-terminal  Mongodb practice terminal
https://www.w3resource.com/mongodb-exercises/
https://dzone.com/articles/microservices-design-principles    microservices
https://www.hackerrank.com/Interview/interview-preparation-kit?h_r=internal-search
Merge two sorted linked lists
Clone a linked list with next and random pointer | Set 1
Flatten a multilevel linked list
Flatten a binary tree into linked list | Set-3
Flatten a multi-level linked list | Set 2 (Depth wise)
Merge a linked list into another linked list at alternate positions
Convert singly linked list into circular linked list
Merge first half and reversed second half of the linked list alternatively
In-place Merge two linked lists without changing links of first list
Merge K sorted Doubly Linked List in Sorted Order
Merge two sorted linked lists such that merged list is in reverse order
Reverse alternate K nodes in a Singly Linked List
Rearrange a linked list in to alternate first and last element
Alternate sorting of Linked list
Minimum number
of swaps required to sort an array

https://www.hackerrank.com/challenges/crush/problem
2 5 1 3 4

2 4 1 3 5

1 4 2 3 5

1 2 4 3 5

Docker commands --------------
https://www.edureka.co/blog/docker-commands/





--  query  ---
select * from BV_TEST_INVOICE ;
select first_name , address from BV_TEST_INVOICE order by first_name asc , address asc ;
update BV_TEST_INVOICE set FIRST_NAME = 'Vipul' where employee_id = '7'
--Write an SQL query to fetch the names of workers who earn the highest salary.
select FIRST_NAME , salary from BV_TEST_INVOICE where salary in (select max(salary) from BV_TEST_INVOICE)
-- Write an SQL query to fetch departments along with the total salaries paid for each of them.
select department , sum(salary) from BV_TEST_INVOICE group by department
-- Write an SQL query to fetch nth max salaries from a table.
select * from BV_TEST_INVOICE order by salary desc
select salary from (select distinct rownum as rank  from BV_TEST_INVOICE where rank<=2 ORDER BY  salary asc ) where rownum <=1 order by salary asc;

select min(salary) from (select salary from
(select distinct salary from BV_TEST_INVOICE order by salary desc) where rownum <=2 )
----feth three Max salaries --
select salary from
(select distinct salary from BV_TEST_INVOICE order by salary desc) where rownum <=3 ;
----feth three Min salaries --
select salary from
(select distinct salary from BV_TEST_INVOICE order by salary asc) where rownum <=3 ;
--Write an SQL query to print the name of employees having the highest salary in each department.
select * from BV_TEST_INVOICE
select  department , min(salary) ,count(*) from BV_TEST_INVOICE group by department having count(*) >=2
select * FROM BV_TEST_INVOICE
WHERE rowid  in
(SELECT MIN(rowid)
FROM BV_TEST_INVOICE
GROUP BY department);

select * from BV_TEST_INVOICE
    where rowid  in
    (select max(rowid) from BV_TEST_INVOICE group by department);

SELECT distinct Salary from BV_TEST_INVOICE a
WHERE 3 >= (SELECT count(distinct Salary)
from BV_TEST_INVOICE b WHERE a.Salary >= b.Salary) order by a.Salary desc;

SELECT distinct Salary from BV_TEST_INVOICE a WHERE 3 >= (SELECT count(distinct Salary)
from BV_TEST_INVOICE b WHERE a.Salary <= b.Salary) order by a.Salary desc;

--Write an SQL query to fetch the list of employees with the same salary.
select * from BV_TEST_INVOICE ;
Select distinct W.EMPLOYEE_ID, W.FIRST_NAME, W.Salary
from BV_TEST_INVOICE W , BV_TEST_INVOICE W1
where W.Salary = W1.Salary
and W.EMPLOYEE_ID != W1.EMPLOYEE_ID;

---Write an SQL query to determine the 5th highest salary without using TOP or limit method.
SELECT Salary
FROM BV_TEST_INVOICE W1
WHERE 2 = (
 SELECT COUNT( DISTINCT ( W2.Salary ) )
 FROM BV_TEST_INVOICE W2
 WHERE W2.Salary >= W1.Salary
 );
 SELECT SYSDATE FROM DUAL;


Geeksforgeeks --

https://practice.geeksforgeeks.org/explore?page=1&curated[]=1&sortBy=submissions&utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header
https://practice.geeksforgeeks.org/explore?page=2&difficulty[]=1&difficulty[]=2&sortBy=submissions&utm_source=gfg&utm_medium=gfg_header&utm_campaign=gfgpractice_header
https://practice.geeksforgeeks.org/events/rec/interview-series

English Grammer-----
https://hinditoenglish.in/grammar/
https://www.topprnation.in/english-grammar-in-hindi-english/
https://www.spokenenglish.guru/tense-definition-rules-charts/.        exaples of tense

Tech.

JMeter 
GoLang
Caching - Redis, Hazlecast, Memcached.. etc
Queues - IBM-MQ ,ActiveMQ , Rabbitmq, Kafka..etc


Continuous Integration Server (Jenkins, Bamboo, CruiseControl, TeamCity, and others)


s. Three of them were mandatory and fourth parameter was for custom partitioner. Let me recap all of them.
bootstrap.servers
key.serializer
value.serializer
partitioner.class


TESTING TOOLS 
• Selenium • JMeter • Apache Bench 

Sonar , Jira , bitbucket , 
Resilience4j
Jmeter
swagger-ui
Redis
CI/CD
System Design ( HLD/LLD )
Monitoring -Prometheus 
Agile

Cassandra
HLD LLD

zabbix,grafana -for server monitoring 
newrelic - application monitoring
Ansible:- server configuration management tool 


Bv - Kubernetes ,Jmeter ,swagger-ui ,Agile , Sonar,JIRA , ,System Design ( HLD/LLD ) 


LMG -   System Design ( HLD/LLD ),change description , CI/CD ,Bitbucket ,Jmeter ,Resilience4j  ,swagger-ui 
Redis , Prometheus ,zabbix, grafana newrelic , Agile

zabbix,grafana - server monitoring , 
newrelic - application monitoring

Cassandra
Java/Kotlin, Golang, Ruby
Spark Streaming , haddop
Spring5

AWS (EC2, Lambda, API Gateway, Fargate, SNS/SQS, DynamoDB, ELB/ALB, and more)
ActiveMQ,Groovy / Grails, Elasticsearch , Agile environment (Scrum/Kanban) , spring batch

Oracle{
Spring Boot
React.Js
Microservices
Java 8
SpringBoot
J2EE
Angular
React JS
}
Del{
Kafka
Tableau
Apache Spark
IT Skills
Java
Cloud
Hibernate
}
Marathalli ,
Nest away

Problems

Stock maximization problem
SQL and NoSQL Databases, Producer/Consumer Problem

Some common programs asked at DE Shaw interviews :
* Save all leaf nodes of a Binary tree in a Doubly Linked List by using Right node as Next node and Left Node as Previous Node.
* Given an array,find the maximum j – i such that arr[j] > arr[i]
* Remove Alternate Duplicate characters from a char array you have to do it in Place.Like keeping only the odd occurences of each character.
* Example: Input: “you got beautiful eyes” 
* 
* Output: ”you gtbeaiful es” 
* 
* Allowed Time Complexity was O(n) and Space Complexity was O(1) 
*  
* In a file there are 1 million words . Find 10 most frequent words in that file.
* Find all nodes at k-distance from a given node in a binary tree
* Clone a linked list with next and random pointer
* Serialise and Deserialise a linked list with next and random pointer.
* Construct a binary tree from given inorder and preorder traversals.
* Return a tree such that each internal node stores sum of all its child nodes. Each leaf node stores zero.
* How will you implement linked list with 1 million nodes? How will you access 999999 th node? Give some optimal design strategy and implementation.
* Reversal of Linked List in groups of K.
* Given a positive integer N, count all possible distinct binary strings of length N such that there are no consecutive 1’s.
* Check whether given binary tree is balanced or not. Definition was no two leaves should have height difference of greater than one.
* Remove duplicates from string in place in O(n).
* Connect nodes on same level in a binary tree.
* Find sum of data of all leaves of a binary tree on same level and then multiply sums obtained of all levels.
* Given a matrix of characters and a word. you have to count the number of occurrences of that word in that matrix. you can move to any of the eight valid directions from current position.
* You are given an string as input which represents a path. You have to normalize that path inplace(NO EXTRA SPACE).
* e.g.input : "\a\b\c\..\..\file.txt"  
* 
* output: "\a\file.txt" 
*  
* Least common ancestor of two nodes in a binary tree
* Given two sorted arrays (with repetitive elements) find the kth minimum number from both arrays.
* Given the root to a binary tree, a value n and k.Find the sum of nodes at distance k from node with value n
* Find an element in a rotated array
* The cost of a stock on each day is given in an array, find the max profit that you can make by buying and selling in those days.
* For example, if the given array is {100, 180, 260, 310, 40, 535, 695},  
* 
* the maximum profit can earned by buying on day 0, selling on 
* 
* day 3. Again buy on day 4 and sell on day 6.  
* 
* If the given array of prices is sorted in decreasing order, 
* 
*  then profit cannot be earned at all. 
*  
* Given two linked lists both represent a number. Create a linked list that contains its sum.
* Given a binary search tree , print the path which has the sum equal to k and has minimum hops. i.e if there are multiple paths with the sum equal to k then print the path with minimum number of nodes.
* A MxN matrix containing integers (positive, negative and zero’s). For every position containing 0, mark the corresponding row and column as 0.
* Rotate MxN matrix by 90 degress.
* Find the nth number that contains the digit k or is divisible by k. (2 <= k <= 9)
* Write a program to connect next left node in a binary tree. Also first node of each level should be pointing to last node of next level? (Without using Queue)
* Convert a binary tree to its sum tree(each node is the sum of its children)
* Given a directed graph. Construct another graph from given graph such that if path exists from vertices A to vertices B and from B to C, then path from A to C and from C to A also should exists.
* Implement hashmap on your own. Write good hashing function for string.
* Given an array, arrange the elements such that the number formed by concatenating the elements is highest.
* E.g.: input = [9, 93, 24, 6],  
* 
* the output should be: [9,93,6,24]. 
* 
*  This is because if you concatenate all the numbers,  
* 
* 993624 is the highest number that can be formed. 
*  
* Given a string, find the longest substring which is palindrome.
* Given that integers are read from a data stream. Find median of elements read so for in efficient way. For simplicity assume there are no duplicates.
* Write an efficient program for printing k largest elements in an array. Elements in array can be in any order.
* Given unsorted array and a number K. Find 2 numbers such that sum is K.
* Given n-ary tree. zigzag level order traversal.
* Given string s and string t find whether all permutation of t is present as substring in s.
* Design a stack which holds an integer value such that getMinimum() function should return the minimum element in the stack. Implement popMin() function which would pop minimum element from the original stack.
* Given a set of intervals like 5-10, 15-20, 25-40, 30-45, 50-100. Find the ith smallest number in these intervals. Assume there are no duplicate numbers.
* e.g:  1st smallest number = 5	  6th smallest number = 10	 
* 
* 7th smallest number = 15 and so on.  
*  
* Given an array which is first strictly increasing and then strictly decreasing. Find an element in this array.
* Given a string example : shoppingwithflipkartiseasy, Now we are given this string and a dictionary containing valid words , now we need to break the sentence into words separated by space. Output : shopping with flipkart is easy
* Given a series 2,3,4,5,6,8,9,10,……, here in this series all the numbers are present which have factors only and only either 2,3 or 5. Need to write a node to generate nth number for the series . With best approach and complexity
* Given a tree with edge weights, find any path in the tree with maximum sum of edges.
* Merge k sorted arrays.
* Given a maze, a start point and end point find the shortest path to reach the end point from the starting point.
* Given a sentence and a set of characters. Find the minimum window within which the set of characters can be found in the sentence in any order.
* You are given a string of 0’s and 1’s you have to find the number of substrings in the string which starts and end with a 1.
* eg : input : 0010110010 output : 6 
*  
* You are given a mapping like a -> 1, b-> 2… z-> 26. You have to print all possible combinations of a given number using the above information.
* eg : input : 121 
* 
* output : aba,la,au 
*  
* You are given a mapping like a -> 1, b-> 2… z-> 26. You have to print all possible combinations of a given number using the above information.
* eg : input : 121 output : aba,la,au 
*  
* Given a dictionary of 50,000 words. Given a phrase without spaces, add spaces to make it a proper sentence.
* e.g:input:  thequickbrownfoxjumpoverlazydog	 
* 
* output: the quick brown fox jump over lazy dog 
*  
* Given an unsorted array of n integers which can contain integers from 1 to n. Some elements can be repeated multiple times and some other elements can be absent from the array. Count frequency of all elements that are present and print the missing elements.
* Examples:Input: arr[] = {2, 3, 3, 2, 5}  
* 
* Output: Below are frequencies of all elements  
* 
* 1 -> 0        2 -> 2        3 -> 2        4 -> 0        5 -> 1 
*  
* Get the next bigger number using the same digits of a number. Eg, For 123456, next number would be 123465
* Given a boolean 2D matrix, find the number of islands. A group of connected 1s forms an island. For example, the below matrix contains 5 islands
* Input : mat[][] =  
* 
* {{1, 1, 0, 0, 0}, 
* 
*  {0, 1, 0, 0, 1},  
* 
*   {1, 0, 0, 1, 1}, 
* 
*   {0, 0, 0, 0, 0},  
* 
*  {1, 0, 1, 0, 1}} 
* 
* Output : 5 
*  
* Given two strings in lowercase, the task is to make them anagram. The only allowed operation is to remove a character from any string. Find minimum number of characters to be deleted to make both the strings anagram?
If two strings contains same data set in any order then strings are called Anagrams.
* Examples: 
* 
*  
* 
* Input : str1 = "bcadeh" str2 = "hea" 
* 
* Output: 3 
* 
* We need to remove b, c and d from str1. 
* 
*  
* 
* Input : str1 = "cddgk" str2 = "gcd" 
* 
* Output: 2 
* 
*  
* 
* Input : str1 = "bca" str2 = "acb" 
* 
* Output: 0 
*  
* Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.
* Examples: 
* 
*  
* 
* Input: arr[]   = {2, 0, 2} 
* 
* Output: 2 
* 
* Structure is like below 
* 
* | | 
* 
* |_| 
* 
* We can trap 2 units of water in the middle gap. 
* 
*  
* 
* Input: arr[]   = {3, 0, 0, 2, 0, 4} 
* 
* Output: 10 
* 
* Structure is like below 
* 
*      | 
* 
* |    | 
* 
* |  | | 
* 
* |__|_|  
* 
* We can trap "3*2 units" of water between 3 an 2, 
* 
* "1 unit" on top of bar 2 and "3 units" between 2  
* 
* and 4.  See below diagram also. 
* 
*  
* 
* Input: arr[] = [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1] 
* 
* Output: 6 
* 
*        |  
* 
*    |   || | 
* 
* _|_||_|||||| 
* 
* Trap "1 unit" between first 1 and 2, "4 units" between 
* 
* first 2 and 3 and "1 unit" between second last 1 and last 2 
*  
* Given two strings str1 and str2 and below operations that can performed on str1. Find minimum number of edits (operations) required to convert ‘str1’ into ‘str2’.
Insert
Remove
Replace
All of the above operations are of equal cost.
* Examples: 
* 
*  
* 
* Input:   str1 = "geek", str2 = "gesek" 
* 
* Output:  1 
* 
* We can convert str1 into str2 by inserting a 's'. 
* 
*  
* 
* Input:   str1 = "cat", str2 = "cut" 
* 
* Output:  1 
* 
* We can convert str1 into str2 by replacing 'a' with 'u'. 
* 
*  
* 
* Input:   str1 = "sunday", str2 = "saturday" 
* 
* Output:  3 
* 
* Last three and first characters are same.  We basically 
* 
* need to convert "un" to "atur".  This can be done using 
* 
* below three operations.  
* 
* Replace 'n' with 'r', insert t, insert a 
*  
* Given a string with repeated characters, task is rearrange characters in a string so that no two adjacent characters are same.
Note : It may be assumed that the string has only lowercase English alphabets.
* Examples: 
* 
*  
* 
* Input: aaabc  
* 
* Output: abaca  
* 
*  
* 
* Input: aaabb 
* 
* Output: ababa  
* 
*  
* 
* Input: aa  
* 
* Output: Not Possible 
* 
*  
* 
* Input: aaaabc  
* 
* Output: Not Possible 
*  
* This problem is know as Clock angle problem where we need to find angle between hands of an analog clock at a given time.
* Examples:Input:  h = 12:00, m = 30.00 
* 
* Output: 165 degreeInput:  h = 3.00, m = 30.00 Output: 75 degree 
*  

For more interview experiences and problems asked at DE Shaw interviews, visit

